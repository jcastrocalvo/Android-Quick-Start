plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "info.jcastrocalvo.quickstart"
        minSdk 24
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    kapt {
        correctErrorTypes true
    }
}

dependencies {
    // Core Android
    implementation              "androidx.core:core-ktx:$ktx_core_version"
    implementation              "androidx.appcompat:appcompat:$app_compat_version"
    implementation              "com.google.android.material:material:$material_version"
    implementation              "androidx.compose.ui:ui:$compose_version"
    implementation              "androidx.compose.material:material:$compose_version"
    implementation              "androidx.compose.ui:ui-tooling:$compose_version"
    implementation              "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_ktx_version"
    implementation              "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_ktx_version"
    implementation              "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ktx_version"
    implementation              "androidx.security:security-crypto:$security_version"
    implementation              "androidx.work:work-runtime-ktx:$work_version"
    api                         "androidx.paging:paging-runtime-ktx:$paging_version"

    // Hilt
    implementation              "androidx.activity:activity-compose:$activity_compose_version"
    implementation              "com.google.dagger:hilt-android:$hilt_version"
    testImplementation          "com.google.dagger:hilt-android-testing:$hilt_version"
    androidTestImplementation   "com.google.dagger:hilt-android-testing:$hilt_version"
    kapt                        "com.google.dagger:hilt-android-compiler:$hilt_version"
    kaptTest                    "com.google.dagger:hilt-compiler:$hilt_version"
    kaptAndroidTest             "com.google.dagger:hilt-compiler:$hilt_version"

    // Testing
    testImplementation          "junit:junit:$junit_version"
    androidTestImplementation   "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation   "androidx.test.espresso:espresso-core:$espresso_core_version"
    androidTestImplementation   "androidx.compose.ui:ui-test-junit4:$compose_version"
    testImplementation          "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testRuntimeOnly             "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    testImplementation          "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
    testImplementation          "io.mockk:mockk:${mockk_version}"

    // Coroutines
    implementation              "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation              "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation              "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_version"
    testImplementation          "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // Retrofit
    implementation              "com.squareup.retrofit2:retrofit:$retrofit_verison"
    implementation              "com.squareup.retrofit2:converter-moshi:$retrofit_verison"
    implementation              "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation              "com.squareup.moshi:moshi-adapters:$moshi_version"

    // OkHTTP
    implementation              "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation              "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Room
    implementation              "androidx.room:room-runtime:$room_version"
    kapt                        "androidx.room:room-compiler:$room_version"
    implementation              "androidx.room:room-ktx:$room_version"
    testImplementation          "androidx.room:room-testing:$room_version"

    // Glide/Images
    implementation              "com.github.bumptech.glide:glide:$glide_version"
    kapt                        "com.github.bumptech.glide:compiler:$glide_version"

    // Timber
    implementation              "com.jakewharton.timber:timber:$timber_version"

    // Dexter
    implementation              "com.karumi:dexter:$dexter_version"
    androidTestImplementation   "com.karumi:dexter:$dexter_version"
}